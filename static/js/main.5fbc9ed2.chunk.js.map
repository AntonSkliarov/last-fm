{"version":3,"sources":["api/api.js","api/getArtist.js","components/ArtistTag/ArtistTag.jsx","components/ArtistDetails/ArtistDetails.jsx","components/Navigation/Navigation.jsx","components/TrackCard/TrackCard.jsx","api/getTopTracks.js","components/TopTracks/TopTracks.jsx","api/getTrack.js","components/TrackSearch/TrackSearch.jsx","App.jsx","index.jsx"],"names":["BASE_URL","API_KEY","getArtist","name","a","getArtistURL","fetch","response","json","result","ArtistTag","tag","href","url","target","rel","ArtistDetails","match","useState","artist","setArtist","artistImage","setArtistImage","useEffect","artistName","params","requestedArtist","image","forEach","picture","size","fetchData","Object","keys","length","src","alt","bio","content","tags","map","console","log","Navigation","className","to","TrackCard","track","trackImage","getTopTracksURL","getTopTracks","TopTracks","topTracks","setTopTracks","requestedTracks","songs","tracks","tracksWithIds","song","i","id","getTrack","title","getTrackURL","TrackSearch","query","setQuery","tracksForPreview","setTracksForPreview","searchError","setSearchError","trackSearch","event","preventDefault","results","trackmatches","htmlFor","classNames","type","placeholder","value","onChange","autoComplete","onClick","App","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAAaA,EAAW,qCAEXC,EAAU,mCCAhB,SAAeC,EAAtB,kC,4CAAO,WAAyBC,GAAzB,mBAAAC,EAAA,6DACCC,EADD,wCAEgCF,EAFhC,oBAEgDF,EAFhD,yBAIkBK,MAAM,GAAD,OAAIN,GAAJ,OAAeK,IAJtC,cAICE,EAJD,gBAKgBA,EAASC,OALzB,cAKCC,EALD,yBAOEA,GAPF,4C,sBCCA,IAAMC,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAH,OACvB,mBACEC,KAAMD,EAAIE,IACVC,OAAO,SACPC,IAAI,aAHN,SAKGJ,EAAIR,QCJF,SAASa,EAAT,GAAmC,IAAVC,EAAS,EAATA,MAAS,EACXC,mBAAS,IADE,mBAChCC,EADgC,KACxBC,EADwB,OAEDF,mBAAS,IAFR,mBAEhCG,EAFgC,KAEnBC,EAFmB,KAqBvC,OAjBAC,qBAAU,WAAM,4CACd,8BAAAnB,EAAA,6DACUoB,EAAeP,EAAMQ,OAArBD,WADV,SAEgCtB,EAAUsB,GAF1C,OAEQE,EAFR,OAIEN,EAAUM,EAAgBP,QAE1BO,EAAgBP,OAAOQ,MAAMC,SAAQ,SAACC,GACf,eAAjBA,EAAQC,MACVR,EAAeO,MARrB,4CADc,uBAAC,WAAD,wBAcdE,KACC,CAACd,EAAMQ,OAAOD,aAGf,qCACKQ,OAAOC,KAAKd,GAAQe,QACrB,gCACE,qBAAKC,IAAKd,EAAY,SAAUe,IAAI,KACpC,6BAAKjB,EAAOhB,OACZ,4BAAIgB,EAAOkB,IAAIC,UACf,qCACCnB,EAAOoB,KAAK5B,IAAI6B,KAAI,SAAA7B,GAAG,OACtB,cAAC,EAAD,CAA0BA,IAAKA,GAAfA,EAAIR,SAErBsC,QAAQC,IAAIvB,QClChB,SAASwB,IACd,OACE,qBAAKC,UAAU,SAAf,SACE,sBAAKA,UAAU,yBAAf,UACE,cAAC,IAAD,CAAMA,UAAU,cAAcC,GAAG,IAAjC,wBAGA,cAAC,IAAD,CAAMD,UAAU,cAAcC,GAAG,gBAAjC,0BAGA,cAAC,IAAD,CAAMD,UAAU,cAAcC,GAAG,kBAAjC,iC,kBCRD,SAASC,EAAT,GAA+B,IAAVC,EAAS,EAATA,MACtBC,EAAa,GAQjB,OANAD,EAAMpB,MAAMC,SAAQ,SAACC,GACE,WAAjBA,EAAQC,OACVkB,EAAanB,MAKf,qBAAKe,UAAU,kBAAf,SACE,6BACE,sBAAKA,UAAU,eAAf,UACE,qBACEA,UAAU,iBACVT,IAAKa,EAAW,SAChBZ,IAAG,UAAKW,EAAM5B,OAAOhB,KAAlB,kBAGL,gCACE,6BAAK4C,EAAM5C,OACX,8BACE,cAAC,IAAD,CAAM0C,GAAE,0BAAqBE,EAAM5B,OAAOhB,MAA1C,SACG4C,EAAM5B,OAAOhB,SAGlB,mBAAGS,KAAMmC,EAAM5B,OAAON,IAAtB,yCC7BZ,IAAMoC,EAAe,8CACsBhD,EADtB,gBAGd,SAAeiD,IAAtB,+B,4CAAO,8BAAA9C,EAAA,sEACkBE,MAAM,GAAD,OAAIN,GAAJ,OAAeiD,IADtC,cACC1C,EADD,gBAEgBA,EAASC,OAFzB,cAECC,EAFD,yBAIEA,GAJF,4C,sBCDA,SAAS0C,IAAa,IAAD,EACQjC,mBAAS,IADjB,mBACnBkC,EADmB,KACRC,EADQ,KAsB1B,OAnBA9B,qBAAU,WAAM,4CACd,gCAAAnB,EAAA,sEACgC8C,IADhC,OACQI,EADR,OAGQC,EAAQD,EAAgBE,OAAOT,MAE/BU,EAAgBF,EAAMf,KAAI,SAACkB,EAAMC,GAAP,mBAAC,eAE1BD,GAFyB,IAG5BE,GAAID,OAIRN,EAAaI,GAZf,4CADc,uBAAC,WAAD,wBAgBd1B,KACC,IAGD,gCACE,iDACA,oBAAIa,UAAU,4BAAd,SACGQ,EAAUZ,KAAI,SAAAO,GAAK,OAClB,cAAC,EAAD,CAAWA,MAAOA,GAAYA,EAAMa,Y,qBC7BvC,SAAeC,EAAtB,kC,4CAAO,WAAwBC,GAAxB,mBAAA1D,EAAA,6DACC2D,EADD,qCAE6BD,EAF7B,oBAE8C7D,EAF9C,yBAIkBK,MAAM,GAAD,OAAIN,GAAJ,OAAe+D,IAJtC,cAICxD,EAJD,gBAKgBA,EAASC,OALzB,cAKCC,EALD,yBAOEA,GAPF,4C,sBCEA,SAASuD,IAAe,IAAD,EACF9C,mBAAS,IADP,mBACrB+C,EADqB,KACdC,EADc,OAEoBhD,qBAFpB,mBAErBiD,EAFqB,KAEHC,EAFG,OAGUlD,oBAAS,GAHnB,mBAGrBmD,EAHqB,KAGRC,EAHQ,KAWtBC,EAAW,uCAAG,WAAMC,GAAN,iBAAApE,EAAA,6DAClBoE,EAAMC,iBADY,SAEYZ,EAASI,GAFrB,UAEZX,EAFY,OAMI,KAFhBE,EAASF,EAAgBoB,QAAQC,aAAa5B,OAEzCb,OANO,uBAOhBoC,GAAe,GAPC,0BAYlBA,GAAe,GACfF,EAAoBZ,GAbF,4CAAH,sDAgBjB,OACE,qCACE,uBAAMZ,UAAU,aAAhB,UACE,sBAAKA,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQgC,QAAQ,cAAjC,yBAIA,qBAAKhC,UAAU,UAAf,SACE,uBACEA,UAAWiC,IAAW,QAAS,CAC7B,YAAaR,IAEfS,KAAK,OACLlB,GAAG,cACHmB,YAAY,gCACZC,MAAOf,EACPgB,SAvCQ,SAACT,GACnBF,GAAe,GACfJ,EAASM,EAAM1D,OAAOkE,OACtBZ,KAqCUc,aAAa,UAGhBb,GACC,mBAAGzB,UAAU,iBAAb,qDAMJ,qBAAKA,UAAU,mBAAf,SACE,qBAAKA,UAAU,UAAf,SACE,wBACEkC,KAAK,SACLlC,UAAU,kBACVuC,QAASZ,EAHX,iCAWN,qBAAK3B,UAAU,YAAf,SACGuB,GACC,qCACE,oBAAIvB,UAAU,QAAd,6BACA,wBAAOA,UAAU,QAAjB,UACE,uBAAOA,UAAU,QAAjB,SACE,+BACE,6CACA,wCACA,sDAGJ,gCACGuB,EAAiB3B,KAAI,SAAAO,GAAK,OACzB,+BACE,6BAAKA,EAAM5C,OACX,6BAAK4C,EAAM5B,SACX,6BACE,mBACEP,KAAMmC,EAAMlC,IACZE,IAAI,aACJD,OAAO,SAHT,iCAYT2B,QAAQC,IAAIyB,WC9FlB,SAASiB,IACd,OACE,qCACE,cAACzC,EAAD,IACA,qBAAKC,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEyC,KAAK,8BACLC,UAAWtE,IAGb,cAAC,IAAD,CAAOqE,KAAK,gBAAZ,SACE,cAACrB,EAAD,MAGF,cAAC,IAAD,CAAOqB,KAAK,IAAIE,OAAK,EAArB,SACE,cAACpC,EAAD,MAGF,cAAC,IAAD,CAAUkC,KAAK,QAAQxC,GAAG,cCrBpC2C,IAASC,OACP,cAAC,IAAD,UACE,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.5fbc9ed2.chunk.js","sourcesContent":["export const BASE_URL = 'https://ws.audioscrobbler.com/2.0/';\n\nexport const API_KEY = '5190711e40adb8688facb8a58d660e2d';\n","import { BASE_URL, API_KEY } from './api';\n\nexport async function getArtist(name) {\n  const getArtistURL\n    = `?method=artist.getinfo&artist=${name}&api_key=${API_KEY}&format=json`;\n\n  const response = await fetch(`${BASE_URL}${getArtistURL}`);\n  const result = await response.json();\n\n  return result;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const ArtistTag = ({ tag }) => (\n  <a\n    href={tag.url}\n    target=\"_blank\"\n    rel=\"noreferrer\"\n  >\n    {tag.name}\n  </a>\n);\n\nArtistTag.propTypes = {\n  tag: PropTypes.shape({\n    url: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { getArtist } from '../../api/getArtist';\nimport { ArtistTag } from '../ArtistTag';\n\nexport function ArtistDetails({ match }) {\n  const [artist, setArtist] = useState({});\n  const [artistImage, setArtistImage] = useState('');\n\n  useEffect(() => {\n    async function fetchData() {\n      const { artistName } = match.params;\n      const requestedArtist = await getArtist(artistName);\n\n      setArtist(requestedArtist.artist);\n\n      requestedArtist.artist.image.forEach((picture) => {\n        if (picture.size === 'extralarge') {\n          setArtistImage(picture);\n        }\n      });\n    }\n\n    fetchData();\n  }, [match.params.artistName]);\n\n  return (\n    <>\n      {!!Object.keys(artist).length && (\n        <div>\n          <img src={artistImage['#text']} alt=\"\" />\n          <h3>{artist.name}</h3>\n          <p>{artist.bio.content}</p>\n          <p>Tags</p>\n          {artist.tags.tag.map(tag => (\n            <ArtistTag key={tag.name} tag={tag} />\n          ))}\n          {console.log(artist)}\n        </div>\n      )}\n    </>\n  );\n}\n\nArtistDetails.propTypes = PropTypes.shape({\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n}).isRequired;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport function Navigation() {\n  return (\n    <nav className=\"navbar\">\n      <div className=\"navbar-brand container\">\n        <Link className=\"navbar-item\" to=\"/\">\n          Top Tracks\n        </Link>\n        <Link className=\"navbar-item\" to=\"/track-search\">\n          Track Search\n        </Link>\n        <Link className=\"navbar-item\" to=\"/artist-details\">\n          Artist Details\n        </Link>\n      </div>\n    </nav>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './TrackCard.scss';\n\nexport function TrackCard({ track }) {\n  let trackImage = {};\n\n  track.image.forEach((picture) => {\n    if (picture.size === 'medium') {\n      trackImage = picture;\n    }\n  });\n\n  return (\n    <div className=\"track-card card\">\n      <li>\n        <div className=\"card-content\">\n          <img\n            className=\"image is-64x64\"\n            src={trackImage['#text']}\n            alt={`${track.artist.name} Album Cover`}\n          />\n\n          <div>\n            <h3>{track.name}</h3>\n            <div>\n              <Link to={`/artist-details/${track.artist.name}`}>\n                {track.artist.name}\n              </Link>\n            </div>\n            <a href={track.artist.url}>Artist on Last.fm</a>\n          </div>\n        </div>\n      </li>\n    </div>\n  );\n}\n\nTrackCard.propTypes = {\n  track: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    image: PropTypes.arrayOf(PropTypes.shape({\n      '#text': PropTypes.string.isRequired,\n      size: PropTypes.string.isRequired,\n    }).isRequired).isRequired,\n    artist: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      url: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n","import { BASE_URL, API_KEY } from './api';\n\nconst getTopTracksURL\n  = `/?method=chart.gettoptracks&api_key=${API_KEY}&format=json`;\n\nexport async function getTopTracks() {\n  const response = await fetch(`${BASE_URL}${getTopTracksURL}`);\n  const result = await response.json();\n\n  return result;\n}\n","import React, { useEffect, useState } from 'react';\nimport { TrackCard } from '../TrackCard/TrackCard';\nimport { getTopTracks } from '../../api/getTopTracks';\n\nexport function TopTracks() {\n  const [topTracks, setTopTracks] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const requestedTracks = await getTopTracks();\n\n      const songs = requestedTracks.tracks.track;\n\n      const tracksWithIds = songs.map((song, i) => (\n        {\n          ...song,\n          id: i,\n        }\n      ));\n\n      setTopTracks(tracksWithIds);\n    }\n\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <h2>TOP TRACKS PAGE</h2>\n      <ul className=\"is-flex is-flex-wrap-wrap\">\n        {topTracks.map(track => (\n          <TrackCard track={track} key={track.id} />\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import { BASE_URL, API_KEY } from './api';\n\nexport async function getTrack(title) {\n  const getTrackURL\n    = `?method=track.search&track=${title}&api_key=${API_KEY}&format=json`;\n\n  const response = await fetch(`${BASE_URL}${getTrackURL}`);\n  const result = await response.json();\n\n  return result;\n}\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { getTrack } from '../../api/getTrack';\n\nexport function TrackSearch() {\n  const [query, setQuery] = useState('');\n  const [tracksForPreview, setTracksForPreview] = useState();\n  const [searchError, setSearchError] = useState(false);\n\n  const changeQuery = (event) => {\n    setSearchError(false);\n    setQuery(event.target.value);\n    setTracksForPreview();\n  };\n\n  const trackSearch = async(event) => {\n    event.preventDefault();\n    const requestedTracks = await getTrack(query);\n\n    const tracks = requestedTracks.results.trackmatches.track;\n\n    if (tracks.length === 0) {\n      setSearchError(true);\n\n      return;\n    }\n\n    setSearchError(false);\n    setTracksForPreview(tracks);\n  };\n\n  return (\n    <>\n      <form className=\"find-track\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"track-title\">\n            Track title\n          </label>\n\n          <div className=\"control\">\n            <input\n              className={classNames('input', {\n                'is-danger': searchError,\n              })}\n              type=\"text\"\n              id=\"track-title\"\n              placeholder=\"Enter a track title to search\"\n              value={query}\n              onChange={changeQuery}\n              autoComplete=\"off\"\n            />\n          </div>\n          {searchError && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a track with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-light\"\n              onClick={trackSearch}\n            >\n              Find a track\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        {tracksForPreview && (\n          <>\n            <h3 className=\"title\">Tracks Matches:</h3>\n            <table className=\"table\">\n              <thead className=\"thead\">\n                <tr>\n                  <th>Track Title</th>\n                  <th>Artist</th>\n                  <th>Link to Last.fm</th>\n                </tr>\n              </thead>\n              <tbody>\n                {tracksForPreview.map(track => (\n                  <tr>\n                    <td>{track.name}</td>\n                    <td>{track.artist}</td>\n                    <td>\n                      <a\n                        href={track.url}\n                        rel=\"noreferrer\"\n                        target=\"_blank\"\n                      >\n                        Listen\n                      </a>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n            {console.log(tracksForPreview)}\n          </>\n        )}\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport './App.scss';\nimport { ArtistDetails } from './components/ArtistDetails';\nimport { Navigation } from './components/Navigation';\nimport { TopTracks } from './components/TopTracks/TopTracks';\nimport { TrackSearch } from './components/TrackSearch/TrackSearch';\n\nexport function App() {\n  return (\n    <>\n      <Navigation />\n      <div className=\"container\">\n        <Switch>\n          <Route\n            path=\"/artist-details/:artistName\"\n            component={ArtistDetails}\n          />\n\n          <Route path=\"/track-search\">\n            <TrackSearch />\n          </Route>\n\n          <Route path=\"/\" exact>\n            <TopTracks />\n          </Route>\n\n          <Redirect path=\"/home\" to=\"/\" />\n        </Switch>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}