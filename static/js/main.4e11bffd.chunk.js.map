{"version":3,"sources":["api/api.js","api/getTracks.js","components/Navigation/Navigation.jsx","components/TrackCard/TrackCard.jsx","components/TopTracks/TopTracks.jsx","App.jsx","index.jsx"],"names":["BASE_URL","getTopTracksURL","getTracks","a","fetch","response","json","result","Navigation","className","to","TrackCard","track","trackImage","image","forEach","picture","size","src","alt","artist","name","href","url","TopTracks","tracks","map","id","App","useState","topTracks","setTopTracks","useEffect","requestedTracks","songs","tracksWithIds","song","i","fetchData","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAAaA,EAAW,oCCElBC,EAAe,8CDAE,mCCAF,gBAGd,SAAeC,IAAtB,+B,4CAAO,8BAAAC,EAAA,sEACkBC,MAAM,GAAD,OAAIJ,GAAJ,OAAeC,IADtC,cACCI,EADD,gBAEgBA,EAASC,OAFzB,cAECC,EAFD,yBAIEA,GAJF,4C,4BCFA,SAASC,IACd,OACE,qBAAKC,UAAU,SAAf,SACE,sBAAKA,UAAU,yBAAf,UACE,cAAC,IAAD,CAAMA,UAAU,cAAcC,GAAG,IAAjC,wBAGA,cAAC,IAAD,CAAMD,UAAU,cAAcC,GAAG,gBAAjC,0BAGA,cAAC,IAAD,CAAMD,UAAU,cAAcC,GAAG,kBAAjC,iC,MCTD,SAASC,EAAT,GAA+B,IAAVC,EAAS,EAATA,MACtBC,EAAa,GAQjB,OANAD,EAAME,MAAMC,SAAQ,SAACC,GACE,WAAjBA,EAAQC,OACVJ,EAAaG,MAKf,qBAAKP,UAAU,kBAAf,SACE,6BACE,sBAAKA,UAAU,eAAf,UACE,qBACEA,UAAU,iBACVS,IAAKL,EAAW,SAChBM,IAAG,UAAKP,EAAMQ,OAAOC,KAAlB,kBAGL,gCACE,6BAAKT,EAAMS,OACX,6BAAKT,EAAMQ,OAAOC,OAClB,mBAAGC,KAAMV,EAAMQ,OAAOG,IAAtB,yCCtBL,SAASC,EAAT,GAAgC,IAAXC,EAAU,EAAVA,OAC1B,OACE,gCACE,iDACA,oBAAIhB,UAAU,4BAAd,SACGgB,EAAOC,KAAI,SAAAd,GAAK,OACf,cAAC,EAAD,CAAWA,MAAOA,GAAYA,EAAMe,YCHvC,SAASC,IAAO,IAAD,EACcC,mBAAS,IADvB,mBACbC,EADa,KACFC,EADE,KAsBpB,OAnBAC,qBAAU,WAAM,4CACd,gCAAA7B,EAAA,sEACgCD,IADhC,OACQ+B,EADR,OAGQC,EAAQD,EAAgBR,OAAOb,MAE/BuB,EAAgBD,EAAMR,KAAI,SAACU,EAAMC,GAAP,mBAAC,eAE1BD,GAFyB,IAG5BT,GAAIU,OAIRN,EAAaI,GAZf,4CADc,uBAAC,WAAD,wBAgBdG,KACC,IAGD,qCACE,cAAC9B,EAAD,IACA,qBAAKC,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO8B,KAAK,kBAAZ,SACE,kDAGF,cAAC,IAAD,CAAOA,KAAK,gBAAZ,SACE,gDAGF,cAAC,IAAD,CAAOA,KAAK,IAAIC,OAAK,EAArB,SACE,cAAChB,EAAD,CAAWC,OAAQK,MAGrB,cAAC,IAAD,CAAUS,KAAK,QAAQ7B,GAAG,cCxCpC+B,IAASC,OACP,cAAC,IAAD,UACE,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.4e11bffd.chunk.js","sourcesContent":["export const BASE_URL = 'http://ws.audioscrobbler.com/2.0/';\n\nexport const API_KEY = '5190711e40adb8688facb8a58d660e2d';\n","import { BASE_URL, API_KEY } from './api';\n\nconst getTopTracksURL\n  = `/?method=chart.gettoptracks&api_key=${API_KEY}&format=json`;\n\nexport async function getTracks() {\n  const response = await fetch(`${BASE_URL}${getTopTracksURL}`);\n  const result = await response.json();\n\n  return result;\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport function Navigation() {\n  return (\n    <nav className=\"navbar\">\n      <div className=\"navbar-brand container\">\n        <Link className=\"navbar-item\" to=\"/\">\n          Top Tracks\n        </Link>\n        <Link className=\"navbar-item\" to=\"/track-search\">\n          Track Search\n        </Link>\n        <Link className=\"navbar-item\" to=\"/artist-details\">\n          Artist Details\n        </Link>\n      </div>\n    </nav>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TrackCard.scss';\n\nexport function TrackCard({ track }) {\n  let trackImage = {};\n\n  track.image.forEach((picture) => {\n    if (picture.size === 'medium') {\n      trackImage = picture;\n    }\n  });\n\n  return (\n    <div className=\"track-card card\">\n      <li>\n        <div className=\"card-content\">\n          <img\n            className=\"image is-64x64\"\n            src={trackImage['#text']}\n            alt={`${track.artist.name} Album Cover`}\n          />\n\n          <div>\n            <h3>{track.name}</h3>\n            <h3>{track.artist.name}</h3>\n            <a href={track.artist.url}>Artist on Last FM</a>\n          </div>\n        </div>\n      </li>\n    </div>\n  );\n}\n\nTrackCard.propTypes = {\n  track: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    image: PropTypes.arrayOf(PropTypes.shape({\n      '#text': PropTypes.string.isRequired,\n      size: PropTypes.string.isRequired,\n    }).isRequired).isRequired,\n    artist: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      url: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TrackCard } from '../TrackCard/TrackCard';\n\nexport function TopTracks({ tracks }) {\n  return (\n    <div>\n      <h2>TOP TRACKS PAGE</h2>\n      <ul className=\"is-flex is-flex-wrap-wrap\">\n        {tracks.map(track => (\n          <TrackCard track={track} key={track.id} />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nTopTracks.propTypes = {\n  tracks: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { getTracks } from './api/getTracks';\nimport './App.scss';\nimport { Navigation } from './components/Navigation';\nimport { TopTracks } from './components/TopTracks/TopTracks';\n\nexport function App() {\n  const [topTracks, setTopTracks] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const requestedTracks = await getTracks();\n\n      const songs = requestedTracks.tracks.track;\n\n      const tracksWithIds = songs.map((song, i) => (\n        {\n          ...song,\n          id: i,\n        }\n      ));\n\n      setTopTracks(tracksWithIds);\n    }\n\n    fetchData();\n  }, []);\n\n  return (\n    <>\n      <Navigation />\n      <div className=\"container\">\n        <Switch>\n          <Route path=\"/artist-details\">\n            <h2>Artist Details</h2>\n          </Route>\n\n          <Route path=\"/track-search\">\n            <h2>Track Search</h2>\n          </Route>\n\n          <Route path=\"/\" exact>\n            <TopTracks tracks={topTracks} />\n          </Route>\n\n          <Redirect path=\"/home\" to=\"/\" />\n        </Switch>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}