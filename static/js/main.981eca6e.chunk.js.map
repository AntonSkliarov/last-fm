{"version":3,"sources":["api/api.js","api/getArtist.js","components/ArtistDetails/ArtistDetails.jsx","components/Navigation/Navigation.jsx","components/TrackCard/TrackCard.jsx","api/getTracks.js","components/TopTracks/TopTracks.jsx","App.jsx","index.jsx"],"names":["BASE_URL","API_KEY","getArtist","name","a","getArtistURL","fetch","response","json","result","ArtistDetails","match","useState","artist","setArtist","artistImage","setArtistImage","useEffect","artistName","params","requestedArtist","image","forEach","picture","size","fetchData","Object","keys","length","src","alt","bio","content","tags","tag","map","href","url","target","rel","console","log","Navigation","className","to","TrackCard","track","trackImage","getTopTracksURL","getTracks","TopTracks","topTracks","setTopTracks","requestedTracks","songs","tracks","tracksWithIds","song","i","id","App","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.981eca6e.chunk.js","sourcesContent":["export const BASE_URL = 'http://ws.audioscrobbler.com/2.0/';\n\nexport const API_KEY = '5190711e40adb8688facb8a58d660e2d';\n","import { BASE_URL, API_KEY } from './api';\n\nexport async function getArtist(name) {\n  const getArtistURL\n    = `?method=artist.getinfo&artist=${name}&api_key=${API_KEY}&format=json`;\n\n  const response = await fetch(`${BASE_URL}${getArtistURL}`);\n  const result = await response.json();\n\n  return result;\n}\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { getArtist } from '../../api/getArtist';\n\nexport function ArtistDetails({ match }) {\n  const [artist, setArtist] = useState({});\n  const [artistImage, setArtistImage] = useState('');\n\n  useEffect(() => {\n    async function fetchData() {\n      const { artistName } = match.params;\n      const requestedArtist = await getArtist(artistName);\n\n      setArtist(requestedArtist.artist);\n\n      requestedArtist.artist.image.forEach((picture) => {\n        if (picture.size === 'extralarge') {\n          setArtistImage(picture);\n        }\n      });\n    }\n\n    fetchData();\n  }, [match.params.artistName]);\n\n  return (\n    <>\n      {!!Object.keys(artist).length && (\n        <div>\n          <img src={artistImage['#text']} alt=\"\" />\n          <h3>{artist.name}</h3>\n          <p>{artist.bio.content}</p>\n          <p>Tags</p>\n          {artist.tags.tag.map(tag => (\n            <a\n              href={tag.url}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              key={tag.name}\n            >\n              {tag.name}\n            </a>\n          ))}\n          {console.log(artist)}\n        </div>\n      )}\n    </>\n  );\n}\n\nArtistDetails.propTypes = PropTypes.shape({\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n}).isRequired;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport function Navigation() {\n  return (\n    <nav className=\"navbar\">\n      <div className=\"navbar-brand container\">\n        <Link className=\"navbar-item\" to=\"/\">\n          Top Tracks\n        </Link>\n        <Link className=\"navbar-item\" to=\"/track-search\">\n          Track Search\n        </Link>\n        <Link className=\"navbar-item\" to=\"/artist-details\">\n          Artist Details\n        </Link>\n      </div>\n    </nav>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './TrackCard.scss';\n\nexport function TrackCard({ track }) {\n  let trackImage = {};\n\n  track.image.forEach((picture) => {\n    if (picture.size === 'medium') {\n      trackImage = picture;\n    }\n  });\n\n  return (\n    <div className=\"track-card card\">\n      <li>\n        <div className=\"card-content\">\n          <img\n            className=\"image is-64x64\"\n            src={trackImage['#text']}\n            alt={`${track.artist.name} Album Cover`}\n          />\n\n          <div>\n            <h3>{track.name}</h3>\n            <Link to={`/artist-details/${track.artist.name}`}>\n              {track.artist.name}\n            </Link>\n            <a href={track.artist.url}>Artist on Last FM</a>\n          </div>\n        </div>\n      </li>\n    </div>\n  );\n}\n\nTrackCard.propTypes = {\n  track: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    image: PropTypes.arrayOf(PropTypes.shape({\n      '#text': PropTypes.string.isRequired,\n      size: PropTypes.string.isRequired,\n    }).isRequired).isRequired,\n    artist: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      url: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n","import { BASE_URL, API_KEY } from './api';\n\nconst getTopTracksURL\n  = `/?method=chart.gettoptracks&api_key=${API_KEY}&format=json`;\n\nexport async function getTracks() {\n  const response = await fetch(`${BASE_URL}${getTopTracksURL}`);\n  const result = await response.json();\n\n  return result;\n}\n","import React, { useEffect, useState } from 'react';\nimport { TrackCard } from '../TrackCard/TrackCard';\nimport { getTracks } from '../../api/getTracks';\n\nexport function TopTracks() {\n  const [topTracks, setTopTracks] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const requestedTracks = await getTracks();\n\n      const songs = requestedTracks.tracks.track;\n\n      const tracksWithIds = songs.map((song, i) => (\n        {\n          ...song,\n          id: i,\n        }\n      ));\n\n      setTopTracks(tracksWithIds);\n    }\n\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <h2>TOP TRACKS PAGE</h2>\n      <ul className=\"is-flex is-flex-wrap-wrap\">\n        {topTracks.map(track => (\n          <TrackCard track={track} key={track.id} />\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport './App.scss';\nimport { ArtistDetails } from './components/ArtistDetails';\nimport { Navigation } from './components/Navigation';\nimport { TopTracks } from './components/TopTracks/TopTracks';\n\nexport function App() {\n  return (\n    <>\n      <Navigation />\n      <div className=\"container\">\n        <Switch>\n          <Route\n            path=\"/artist-details/:artistName\"\n            component={ArtistDetails}\n          />\n\n          <Route path=\"/track-search\">\n            <h2>Track Search</h2>\n          </Route>\n\n          <Route path=\"/\" exact>\n            <TopTracks />\n          </Route>\n\n          <Redirect path=\"/home\" to=\"/\" />\n        </Switch>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}