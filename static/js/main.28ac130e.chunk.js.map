{"version":3,"sources":["api/api.js","api/getArtist.js","helpers/functions.js","redux/constants/constants.js","redux/actions/app.js","redux/actions/artist.js","components/RequestError/RequestError.jsx","components/ArtistTag/ArtistTag.jsx","components/ArtistInfo/ArtistInfo.jsx","pages/ArtistDetails/ArtistDetails.jsx","components/Navigation/Navigation.jsx","pages/NotFoundPage/NotFoundPage.jsx","components/TrackCard/TrackCard.jsx","api/getTopTracks.js","pages/TopTracks/TopTracks.jsx","redux/actions/topTracks.js","api/getTrack.js","redux/actions/trackSearch.js","components/SearchForm/SearchForm.jsx","components/TracksPreview/TracksPreview.jsx","pages/TrackSearch/TrackSearch.jsx","App.jsx","redux/reducers/appReducer.js","redux/reducers/artistReducer.js","redux/reducers/topTracksReducer.js","redux/reducers/trackSearchReducer.js","redux/reducers/rootReducer.js","index.jsx"],"names":["BASE_URL","API_KEY","getArtist","name","a","getArtistURL","fetch","response","json","result","getImage","images","imageType","trackImage","forEach","picture","size","artistImage","FETCH_TOP_TRACKS","FETCH_ARTIST","SET_ARTIST_IMAGE","FETCH_SEARCHED_TRACK","CLEAR_TRACK_PREVIEW","SET_SEARCH_ERROR","CLEAR_SEARCH_ERROR","SET_INPUT_ERROR","CLEAR_INPUT_ERROR","SET_REQUEST_TOP_TRACKS_ERROR","SET_REQUEST_SEARCH_TRACK_ERROR","SET_REQUEST_ARTIST_ERROR","CLEAR_REQUEST_SEARCH_TRACK_ERROR","PAGE_NAMES","setRequestError","pageName","dispatch","type","setArtistImage","image","imageForArtistPage","payload","RequestError","className","ArtistTag","tag","href","url","target","rel","ArtistInfo","text","artist","useSelector","state","artistBio","bio","content","split","join","src","alt","tags","map","ArtistDetails","match","useDispatch","requestError","requestErrors","artistError","undefined","useEffect","artistName","fetchArtist","params","Navigation","to","activeClassName","exact","NotFoundPage","TrackCard","track","getTopTracksURL","getTopTracks","TopTracks","topTracks","tracks","topTracksError","tracksWithIds","i","id","getTrack","title","getTrackURL","clearInputError","SearchForm","searchError","tracksForPreview","inputError","useState","query","setQuery","htmlFor","classNames","placeholder","value","onChange","event","autoComplete","onClick","trackName","preventDefault","trim","length","results","trackmatches","console","log","setTimeout","TracksPreview","TrackSearch","searchTrackError","App","path","component","initialState","rootReducer","combineReducers","action","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","app","StrictMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.28ac130e.chunk.js","sourcesContent":["export const BASE_URL = 'https://ws.audioscrobbler.com/2.0/';\n\nexport const API_KEY = '5190711e40adb8688facb8a58d660e2d';\n","import { BASE_URL, API_KEY } from './api';\n\nexport async function getArtist(name) {\n  const getArtistURL\n    = `?method=artist.getinfo&artist=${name}&api_key=${API_KEY}&format=json`;\n\n  const response = await fetch(`${BASE_URL}${getArtistURL}`);\n  const result = await response.json();\n\n  return result;\n}\n","export function getImage(images, imageType = 'track') {\n  if (imageType === 'track') {\n    let trackImage = {};\n\n    images.forEach((picture) => {\n      if (picture.size === 'medium') {\n        trackImage = picture;\n      }\n    });\n\n    return trackImage;\n  }\n\n  let artistImage = {};\n\n  images.forEach((picture) => {\n    if (picture.size === 'extralarge') {\n      artistImage = picture;\n    }\n  });\n\n  return artistImage;\n}\n\nexport function formatDescription(text) {\n  const firtsPartOfText = text.split(' <', 2)[0];\n  const secondPartOfText = text.split('a>.')[1];\n\n  const formatedDescription = [firtsPartOfText, secondPartOfText].join('');\n\n  return formatedDescription;\n}\n","export const FETCH_TOP_TRACKS = 'topTracks/FETCH_TOP_TRACKS';\n\nexport const FETCH_ARTIST = 'artist/FETCH_ARTIST';\nexport const SET_ARTIST_IMAGE = 'artist/SET_ARTIST_IMAGE';\n\nexport const FETCH_SEARCHED_TRACK = 'trackSearch/FETCH_SEARCHED_TRACK';\nexport const CLEAR_TRACK_PREVIEW = 'trackSearch/CLEAR_TRACK_PREVIEW';\nexport const SET_SEARCH_ERROR = 'trackSearch/SET_SEARCH_ERROR';\nexport const CLEAR_SEARCH_ERROR = 'trackSearch/CLEAR_SEARCH_ERROR';\nexport const SET_INPUT_ERROR = 'trackSearch/SET_INPUT_ERROR';\nexport const CLEAR_INPUT_ERROR = 'trackSearch/CLEAR_INPUT_ERROR';\n\nexport const SET_REQUEST_TOP_TRACKS_ERROR = 'app/SET_REQUEST_TOP_TRACKS_ERROR';\nexport const SET_REQUEST_SEARCH_TRACK_ERROR\n  = 'app/SET_REQUEST_SEARCH_TRACK_ERROR';\nexport const SET_REQUEST_ARTIST_ERROR = 'app/SET_REQUEST_ARTIST_ERROR';\nexport const CLEAR_REQUEST_SEARCH_TRACK_ERROR\n  = 'CLEAR_REQUEST_SEARCH_TRACK_ERROR';\n\nexport const PAGE_NAMES = {\n  TOP_TRACKS: 'TOP_TRACK_PAGE',\n  SEARCH_TRACK: 'SEARCH_TRACK_PAGE',\n  ARTIST: 'ARTIST_PAGE',\n};\n","import {\n  SET_REQUEST_TOP_TRACKS_ERROR,\n  SET_REQUEST_SEARCH_TRACK_ERROR,\n  SET_REQUEST_ARTIST_ERROR,\n  PAGE_NAMES,\n  CLEAR_REQUEST_SEARCH_TRACK_ERROR,\n} from '../constants/constants';\n\nexport function setRequestError(pageName) {\n  return (dispatch) => {\n    switch (pageName) {\n      case PAGE_NAMES.TOP_TRACKS:\n        dispatch({\n          type: SET_REQUEST_TOP_TRACKS_ERROR,\n        });\n        break;\n\n      case PAGE_NAMES.SEARCH_TRACK:\n        dispatch({\n          type: SET_REQUEST_SEARCH_TRACK_ERROR,\n        });\n        break;\n\n      case PAGE_NAMES.ARTIST:\n        dispatch({\n          type: SET_REQUEST_ARTIST_ERROR,\n        });\n        break;\n\n      default:\n    }\n  };\n}\n\nexport function clearReuestSearchTrackError() {\n  return (dispatch) => {\n    dispatch({\n      type: CLEAR_REQUEST_SEARCH_TRACK_ERROR,\n    });\n  };\n}\n","import { getArtist } from '../../api/getArtist';\nimport { getImage } from '../../helpers/functions';\nimport {\n  SET_ARTIST_IMAGE,\n  FETCH_ARTIST,\n  PAGE_NAMES,\n} from '../constants/constants';\nimport { setRequestError } from './app';\n\nexport function fetchArtist({ artistName }) {\n  return async(dispatch) => {\n    try {\n      const response = await getArtist(artistName);\n      const { artist } = response;\n\n      dispatch({\n        type: FETCH_ARTIST,\n        payload: artist,\n      });\n      dispatch(setArtistImage(artist.image));\n    } catch (error) {\n      dispatch(setRequestError(PAGE_NAMES.ARTIST));\n    }\n  };\n}\n\nexport function setArtistImage(image) {\n  return (dispatch) => {\n    const imageType = 'artist';\n    const imageForArtistPage = getImage(image, imageType);\n\n    dispatch({\n      type: SET_ARTIST_IMAGE,\n      payload: imageForArtistPage,\n    });\n  };\n}\n","import React from 'react';\n\nexport const RequestError = () => (\n  <div className=\"message is-danger\">\n    <div className=\"message-header\">\n      <p>Oops, something went wrong</p>\n    </div>\n    <div className=\"message-body\">\n      Sorry for the inconvenience.\n      Please try to reload the page or contact the support team.\n    </div>\n  </div>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const ArtistTag = ({ tag }) => (\n  <button type=\"button\" className=\"button is-link is-light is-small mr-2\">\n    <a\n      href={tag.url}\n      target=\"_blank\"\n      rel=\"noreferrer\"\n    >\n      {tag.name}\n    </a>\n  </button>\n);\n\nArtistTag.propTypes = {\n  tag: PropTypes.shape({\n    url: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { ArtistTag } from '../ArtistTag';\nimport { formatDescription } from '../../helpers/functions';\nimport './ArtistInfo.scss';\n\nexport function ArtistInfo() {\n  const artist = useSelector(state => state.artist.artist);\n  const artistImage = useSelector(state => state.artist.artistImage);\n\n  const artistBio = formatDescription(artist.bio.content);\n\n  return (\n    <div className=\"artist-info\">\n      <img\n        className=\"subtitle mb-4\"\n        src={artistImage['#text']}\n        alt={artist.name}\n      />\n      <h2 className=\"subtitle mb-3\">{artist.name}</h2>\n      <p className=\"mb-4\">{artistBio}</p>\n      {artist.tags.tag.map(tag => (\n        <ArtistTag key={tag.name} tag={tag} />\n      ))}\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchArtist } from '../../redux/actions/artist';\nimport { RequestError } from '../../components/RequestError';\nimport { ArtistInfo } from '../../components/ArtistInfo';\n\nexport function ArtistDetails({ match }) {\n  const dispatch = useDispatch();\n  const artist = useSelector(state => state.artist.artist);\n  const requestError = useSelector(state => (\n    state.requestErrors.requestErrors.artistError\n  ));\n\n  if (match !== undefined) {\n    useEffect(() => {\n      dispatch(fetchArtist(match.params));\n    }, [match.params.artistName]);\n  }\n\n  if (requestError) {\n    return (\n      <RequestError />\n    );\n  }\n\n  return (\n    <>\n      {artist\n        ? <ArtistInfo />\n        : (\n          <div className=\"notification is-info\">\n            Hey, wanna see some? Just click on the artist&apos;s\n            name on the Top Tracks Page!\n          </div>\n        )}\n    </>\n  );\n}\n\nArtistDetails.propTypes = PropTypes.shape({\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      artistName: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n}).isRequired;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport function Navigation() {\n  return (\n    <nav className=\" mb-4\">\n      <div className=\"navbar-brand container\">\n        <NavLink\n          className=\"navbar-item is-tab\"\n          to=\"/\"\n          activeClassName=\"is-active\"\n          exact\n        >\n          Top Tracks\n        </NavLink>\n\n        <NavLink\n          className=\"navbar-item is-tab\"\n          to=\"/track-search\"\n          activeClassName=\"is-active\"\n        >\n          Track Search\n        </NavLink>\n\n        <NavLink\n          className=\"navbar-item is-tab\"\n          to=\"/artist-details\"\n          activeClassName=\"is-active\"\n        >\n          Artist Details\n        </NavLink>\n      </div>\n    </nav>\n  );\n}\n","import React from 'react';\n\nexport function NotFoundPage() {\n  return (\n    <>\n      <h1 className=\"title\">404 Page Not Found</h1>\n      <p className=\"subtitle\">\n        An unexpected error has occurred. Please contact the site owner.\n      </p>\n    </>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './TrackCard.scss';\nimport { getImage } from '../../helpers/functions';\n\nexport function TrackCard({ track }) {\n  const trackImage = getImage(track.image);\n\n  return (\n    <div className=\"track-card card mr-4 mb-4\">\n      <li>\n        <div className=\"card-content is-flex\">\n          <img\n            className=\"image is-64x64 mr-5\"\n            src={trackImage['#text']}\n            alt={`${track.artist.name} Album Cover`}\n          />\n\n          <div>\n            <h3>{track.name}</h3>\n            <div className=\"mb-4\">\n              <Link to={`/artist-details/${track.artist.name}`}>\n                {track.artist.name}\n              </Link>\n            </div>\n            <a\n              href={track.artist.url}\n              rel=\"noreferrer\"\n              target=\"_blank\"\n            >\n              Artist on Last.fm\n            </a>\n          </div>\n        </div>\n      </li>\n    </div>\n  );\n}\n\nTrackCard.propTypes = {\n  track: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    image: PropTypes.arrayOf(PropTypes.shape({\n      '#text': PropTypes.string.isRequired,\n      size: PropTypes.string.isRequired,\n    }).isRequired).isRequired,\n    artist: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      url: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n","import { BASE_URL, API_KEY } from './api';\n\nconst getTopTracksURL\n  = `/?method=chart.gettoptracks&api_key=${API_KEY}&format=json`;\n\nexport async function getTopTracks() {\n  const response = await fetch(`${BASE_URL}${getTopTracksURL}`);\n  const result = await response.json();\n\n  return result;\n}\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { TrackCard } from '../../components/TrackCard';\nimport { fetchTopTracks } from '../../redux/actions/topTracks';\nimport { RequestError } from '../../components/RequestError';\n\nexport function TopTracks() {\n  const dispatch = useDispatch();\n  const topTracks = useSelector(state => state.topTracks.tracks);\n  const requestError = useSelector(state => (\n    state.requestErrors.requestErrors.topTracksError\n  ));\n\n  useEffect(() => {\n    dispatch(fetchTopTracks());\n  }, []);\n\n  if (requestError) {\n    return (\n      <RequestError />\n    );\n  }\n\n  return (\n    <div>\n      <ul className=\"is-flex is-flex-wrap-wrap\">\n        {topTracks.map(track => (\n          <TrackCard track={track} key={track.id} />\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import { getTopTracks } from '../../api/getTopTracks';\nimport { FETCH_TOP_TRACKS, PAGE_NAMES } from '../constants/constants';\nimport { setRequestError } from './app';\n\nexport function fetchTopTracks() {\n  return async(dispatch) => {\n    try {\n      const response = await getTopTracks();\n      const tracks = response.tracks.track;\n      const tracksWithIds = tracks.map((track, i) => (\n        {\n          ...track,\n          id: i,\n        }\n      ));\n\n      dispatch({\n        type: FETCH_TOP_TRACKS,\n        payload: tracksWithIds,\n      });\n    } catch (error) {\n      dispatch(setRequestError(PAGE_NAMES.TOP_TRACKS));\n    }\n  };\n}\n","import { BASE_URL, API_KEY } from './api';\n\nexport async function getTrack(title) {\n  const getTrackURL\n    = `?method=track.search&track=${title}&api_key=${API_KEY}&format=json`;\n\n  const response = await fetch(`${BASE_URL}${getTrackURL}`);\n  const result = await response.json();\n\n  return result;\n}\n","import { getTrack } from '../../api/getTrack';\nimport {\n  FETCH_SEARCHED_TRACK,\n  CLEAR_TRACK_PREVIEW,\n  SET_SEARCH_ERROR,\n  CLEAR_SEARCH_ERROR,\n  SET_INPUT_ERROR,\n  CLEAR_INPUT_ERROR,\n  PAGE_NAMES,\n} from '../constants/constants';\nimport { setRequestError } from './app';\n\nexport function fetchSearchedTrack(trackName) {\n  return async(dispatch) => {\n    try {\n      const response = await getTrack(trackName);\n      const tracks = response.results.trackmatches.track;\n\n      if (tracks.length === 0) {\n        dispatch(setSearchError());\n\n        return;\n      }\n\n      dispatch({\n        type: FETCH_SEARCHED_TRACK,\n        payload: tracks,\n      });\n    } catch (error) {\n      console.log('CONSOLE', error);\n      dispatch(setRequestError(PAGE_NAMES.SEARCH_TRACK));\n    }\n  };\n}\n\nexport function clearSearchedTrack() {\n  return (dispatch) => {\n    dispatch({\n      type: CLEAR_TRACK_PREVIEW,\n    });\n  };\n}\n\nexport function setSearchError() {\n  return (dispatch) => {\n    dispatch({\n      type: SET_SEARCH_ERROR,\n    });\n  };\n}\n\nexport function clearSearchError() {\n  return (dispatch) => {\n    dispatch({\n      type: CLEAR_SEARCH_ERROR,\n    });\n  };\n}\n\nexport function setInputError() {\n  return (dispatch) => {\n    dispatch({\n      type: SET_INPUT_ERROR,\n    });\n\n    setTimeout(() => {\n      dispatch(clearInputError());\n    }, 3000);\n  };\n}\n\nexport function clearInputError() {\n  return (dispatch) => {\n    dispatch({\n      type: CLEAR_INPUT_ERROR,\n    });\n  };\n}\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  clearSearchError,\n  clearInputError,\n  clearSearchedTrack,\n  setInputError,\n  fetchSearchedTrack,\n} from '../../redux/actions/trackSearch';\nimport { clearReuestSearchTrackError } from '../../redux/actions/app';\nimport './SearchForm.scss';\n\nexport function SearchForm() {\n  const dispatch = useDispatch();\n  const searchError = useSelector(state => state.tracksForPreview.searchError);\n  const inputError = useSelector(state => (\n    state.tracksForPreview.inputError\n  ));\n  const [query, setQuery] = useState('');\n\n  const changeQuery = (event) => {\n    dispatch(clearSearchError());\n    dispatch(clearInputError());\n    setQuery(event.target.value);\n    dispatch(clearSearchedTrack());\n  };\n\n  const trackSearch = (event) => {\n    event.preventDefault();\n    if (query.trim().length === 0) {\n      dispatch(setInputError());\n\n      return;\n    }\n\n    dispatch(clearReuestSearchTrackError());\n    dispatch(fetchSearchedTrack(query));\n  };\n\n  return (\n    <form className=\"find-track mb-4\">\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"track-title\">\n          Track title\n        </label>\n\n        <div className=\"control\">\n          <input\n            className={classNames('input ', {\n              'is-danger': searchError,\n            })}\n            type=\"text\"\n            id=\"track-title\"\n            placeholder=\"Enter a track title to search\"\n            value={query}\n            onChange={changeQuery}\n            autoComplete=\"off\"\n          />\n        </div>\n\n        {inputError && (\n          <p className=\"help is-danger\">\n            Search field cannot be empty\n          </p>\n        )}\n\n        {searchError && (\n          <p className=\"help is-danger\">\n            Can&apos;t find a track with such a title\n          </p>\n        )}\n      </div>\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            className=\"button is-light\"\n            onClick={trackSearch}\n          >\n            Find a track\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nexport function TracksPreview() {\n  const tracksForPreview = useSelector(state => state.tracksForPreview.tracks);\n\n  return (\n    <div className=\"container is-flex is-flex-direction-column\n    is-justify-content-space-around\"\n    >\n      <h3 className=\"title\">\n        {`Tracks found: ${tracksForPreview.length}`}\n      </h3>\n      <table className=\"table\">\n        <thead className=\"thead\">\n          <tr>\n            <th>Track Title</th>\n            <th>Artist</th>\n            <th>Link to Last.fm</th>\n          </tr>\n        </thead>\n        <tbody>\n          {tracksForPreview.map(track => (\n            <tr key={track.url}>\n              <td>{track.name}</td>\n              <td>{track.artist}</td>\n              <td>\n                <a\n                  href={track.url}\n                  rel=\"noreferrer\"\n                  target=\"_blank\"\n                >\n                  Listen\n                </a>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { RequestError } from '../../components/RequestError';\nimport { SearchForm } from '../../components/SearchForm';\nimport { TracksPreview } from '../../components/TracksPreview';\n\nexport function TrackSearch() {\n  const tracksForPreview = useSelector(state => state.tracksForPreview.tracks);\n  const requestError = useSelector(state => (\n    state.requestErrors.requestErrors.searchTrackError\n  ));\n\n  return (\n    <>\n      <SearchForm />\n\n      {requestError && <RequestError />}\n\n      {!!tracksForPreview.length && <TracksPreview />}\n    </>\n  );\n}\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport './App.scss';\nimport { ArtistDetails } from './pages/ArtistDetails';\nimport { Navigation } from './components/Navigation';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { TopTracks } from './pages/TopTracks';\nimport { TrackSearch } from './pages/TrackSearch';\n\nexport function App() {\n  return (\n    <>\n      <Navigation />\n      <div className=\"container\">\n        <Switch>\n          <Route\n            path=\"/artist-details/:artistName\"\n            component={ArtistDetails}\n          />\n          <Route path=\"/artist-details\">\n            <ArtistDetails />\n          </Route>\n\n          <Route path=\"/track-search\">\n            <TrackSearch />\n          </Route>\n\n          <Route path=\"/\" exact>\n            <TopTracks />\n          </Route>\n\n          <Redirect path=\"/home\" to=\"/\" />\n\n          <NotFoundPage />\n        </Switch>\n      </div>\n    </>\n  );\n}\n","import {\n  SET_REQUEST_TOP_TRACKS_ERROR,\n  SET_REQUEST_SEARCH_TRACK_ERROR,\n  SET_REQUEST_ARTIST_ERROR,\n  CLEAR_REQUEST_SEARCH_TRACK_ERROR,\n} from '../constants/constants';\n\nconst initialState = {\n  requestErrors: {\n    topTracksError: false,\n    searchTrackError: false,\n    artistError: false,\n  },\n};\n\nexport const appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_REQUEST_TOP_TRACKS_ERROR:\n      return {\n        ...state,\n        requestErrors: {\n          ...state.requestErrors,\n          topTracksError: true,\n        },\n      };\n    case SET_REQUEST_SEARCH_TRACK_ERROR:\n      return {\n        ...state,\n        requestErrors: {\n          ...state.requestErrors,\n          searchTrackError: true,\n        },\n      };\n    case SET_REQUEST_ARTIST_ERROR:\n      return {\n        ...state,\n        requestErrors: {\n          ...state.requestErrors,\n          artistError: true,\n        },\n      };\n    case CLEAR_REQUEST_SEARCH_TRACK_ERROR:\n      return {\n        ...state,\n        requestErrors: {\n          ...state.requestErrors,\n          searchTrackError: false,\n        },\n      };\n    default:\n      return state;\n  }\n};\n","import { FETCH_ARTIST, SET_ARTIST_IMAGE } from '../constants/constants';\n\nconst initialState = {\n  artist: null,\n  artistImage: {},\n};\n\nexport const artistReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_ARTIST:\n      return {\n        ...state,\n        artist: action.payload,\n      };\n    case SET_ARTIST_IMAGE:\n      return {\n        ...state,\n        artistImage: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import { FETCH_TOP_TRACKS } from '../constants/constants';\n\nconst initialState = {\n  tracks: [],\n};\n\nexport const topTracksReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_TOP_TRACKS:\n      return {\n        ...state,\n        tracks: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  FETCH_SEARCHED_TRACK,\n  CLEAR_TRACK_PREVIEW,\n  SET_SEARCH_ERROR,\n  CLEAR_SEARCH_ERROR,\n  SET_INPUT_ERROR,\n  CLEAR_INPUT_ERROR,\n} from '../constants/constants';\n\nconst initialState = {\n  tracks: [],\n  searchError: false,\n  inputError: false,\n  requestError: false,\n};\n\nexport const trackSearchReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_SEARCHED_TRACK:\n      return {\n        ...state,\n        tracks: action.payload,\n      };\n    case CLEAR_TRACK_PREVIEW:\n      return {\n        ...state,\n        tracks: [],\n      };\n    case SET_SEARCH_ERROR:\n      return {\n        ...state,\n        searchError: true,\n      };\n    case CLEAR_SEARCH_ERROR:\n      return {\n        ...state,\n        searchError: false,\n      };\n    case SET_INPUT_ERROR:\n      return {\n        ...state,\n        inputError: true,\n      };\n    case CLEAR_INPUT_ERROR:\n      return {\n        ...state,\n        inputError: false,\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { appReducer } from './appReducer';\nimport { artistReducer } from './artistReducer';\nimport { topTracksReducer } from './topTracksReducer';\nimport { trackSearchReducer } from './trackSearchReducer';\n\nexport const rootReducer = combineReducers({\n  topTracks: topTracksReducer,\n  artist: artistReducer,\n  tracksForPreview: trackSearchReducer,\n  requestErrors: appReducer,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport { App } from './App';\nimport { rootReducer } from './redux/reducers/rootReducer';\n\n/* eslint-disable no-underscore-dangle */\nconst store = createStore(rootReducer, compose(\n  applyMiddleware(thunk),\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n));\n/* eslint-enable */\n\nconst app = (\n  <Provider store={store}>\n    <HashRouter>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </HashRouter>\n  </Provider>\n);\n\nReactDOM.render(\n  app,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}