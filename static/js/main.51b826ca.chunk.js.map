{"version":3,"sources":["components/ArtistTag/ArtistTag.jsx","api/api.js","api/getArtist.js","helpers/functions.js","redux/constants/constants.js","redux/actions/app.js","redux/actions/artist.js","components/RequestError/RequestError.jsx","pages/ArtistDetails/ArtistDetails.jsx","components/Navigation/Navigation.jsx","pages/NotFoundPage/NotFoundPage.jsx","components/TrackCard/TrackCard.jsx","api/getTopTracks.js","pages/TopTracks/TopTracks.jsx","redux/actions/topTracks.js","api/getTrack.js","redux/actions/trackSearch.js","components/SearchForm/SearchForm.jsx","pages/TrackSearch/TrackSearch.jsx","App.jsx","redux/reducers/appReducer.js","redux/reducers/artistReducer.js","redux/reducers/topTracksReducer.js","redux/reducers/trackSearchReducer.js","redux/reducers/rootReducer.js","index.jsx"],"names":["ArtistTag","tag","href","url","target","rel","name","BASE_URL","API_KEY","getArtist","a","getArtistURL","fetch","response","json","result","getImage","images","imageType","trackImage","forEach","picture","size","artistImage","FETCH_TOP_TRACKS","FETCH_ARTIST","SET_ARTIST_IMAGE","FETCH_SEARCHED_TRACK","CLEAR_TRACK_PREVIEW","SET_SEARCH_ERROR","CLEAR_SEARCH_ERROR","SET_INPUT_ERROR","CLEAR_INPUT_ERROR","SET_REQUEST_TOP_TRACKS_ERROR","SET_REQUEST_SEARCH_TRACK_ERROR","SET_REQUEST_ARTIST_ERROR","PAGE_NAMES","setRequestError","pageName","dispatch","type","setArtistImage","image","imageForArtistPage","payload","RequestError","className","ArtistDetails","match","useDispatch","artist","useSelector","state","requestError","requestErrors","artistError","undefined","useEffect","artistName","fetchArtist","params","src","alt","bio","content","tags","map","Navigation","to","NotFoundPage","TrackCard","track","getTopTracksURL","getTopTracks","TopTracks","topTracks","tracks","topTracksError","tracksWithIds","i","id","getTrack","title","getTrackURL","clearInputError","SearchForm","searchError","tracksForPreview","showInputError","useState","query","setQuery","htmlFor","classNames","placeholder","value","onChange","event","autoComplete","onClick","trackName","preventDefault","trim","length","results","trackmatches","setTimeout","TrackSearch","searchTrackError","App","path","component","exact","initialState","rootReducer","combineReducers","action","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","app","StrictMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.51b826ca.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const ArtistTag = ({ tag }) => (\n  <a\n    href={tag.url}\n    target=\"_blank\"\n    rel=\"noreferrer\"\n  >\n    {tag.name}\n  </a>\n);\n\nArtistTag.propTypes = {\n  tag: PropTypes.shape({\n    url: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","export const BASE_URL = 'https://ws.audioscrobbler.com/2.0/';\n\nexport const API_KEY = '5190711e40adb8688facb8a58d660e2d';\n","import { BASE_URL, API_KEY } from './api';\n\nexport async function getArtist(name) {\n  const getArtistURL\n    = `?method=artist.getinfo&artist=${name}&api_key=${API_KEY}&format=json`;\n\n  const response = await fetch(`${BASE_URL}${getArtistURL}`);\n  const result = await response.json();\n\n  return result;\n}\n","export function getImage(images, imageType = 'track') {\n  if (imageType === 'track') {\n    let trackImage = {};\n\n    images.forEach((picture) => {\n      if (picture.size === 'medium') {\n        trackImage = picture;\n      }\n    });\n\n    return trackImage;\n  }\n\n  let artistImage = {};\n\n  images.forEach((picture) => {\n    if (picture.size === 'extralarge') {\n      artistImage = picture;\n    }\n  });\n\n  return artistImage;\n}\n","export const FETCH_TOP_TRACKS = 'topTracks/FETCH_TOP_TRACKS';\n\nexport const FETCH_ARTIST = 'artist/FETCH_ARTIST';\nexport const SET_ARTIST_IMAGE = 'artist/SET_ARTIST_IMAGE';\n\nexport const FETCH_SEARCHED_TRACK = 'trackSearch/FETCH_SEARCHED_TRACK';\nexport const CLEAR_TRACK_PREVIEW = 'trackSearch/CLEAR_TRACK_PREVIEW';\nexport const SET_SEARCH_ERROR = 'trackSearch/SET_SEARCH_ERROR';\nexport const CLEAR_SEARCH_ERROR = 'trackSearch/CLEAR_SEARCH_ERROR';\nexport const SET_INPUT_ERROR = 'trackSearch/SET_INPUT_ERROR';\nexport const CLEAR_INPUT_ERROR = 'trackSearch/CLEAR_INPUT_ERROR';\n\nexport const SET_REQUEST_TOP_TRACKS_ERROR = 'app/SET_REQUEST_TOP_TRACKS_ERROR';\nexport const SET_REQUEST_SEARCH_TRACK_ERROR\n  = 'app/SET_REQUEST_SEARCH_TRACK_ERROR';\nexport const SET_REQUEST_ARTIST_ERROR = 'app/SET_REQUEST_ARTIST_ERROR';\n\nexport const PAGE_NAMES = {\n  TOP_TRACKS: 'TOP_TRACK_PAGE',\n  SEARCH_TRACK: 'SEARCH_TRACK_PAGE',\n  ARTIST: 'ARTIST_PAGE',\n};\n","import {\n  SET_REQUEST_TOP_TRACKS_ERROR,\n  SET_REQUEST_SEARCH_TRACK_ERROR,\n  SET_REQUEST_ARTIST_ERROR,\n  PAGE_NAMES,\n} from '../constants/constants';\n\nexport function setRequestError(pageName) {\n  return (dispatch) => {\n    switch (pageName) {\n      case PAGE_NAMES.TOP_TRACKS:\n        dispatch({\n          type: SET_REQUEST_TOP_TRACKS_ERROR,\n        });\n        break;\n\n      case PAGE_NAMES.SEARCH_TRACK:\n        dispatch({\n          type: SET_REQUEST_SEARCH_TRACK_ERROR,\n        });\n        break;\n\n      case PAGE_NAMES.ARTIST:\n        dispatch({\n          type: SET_REQUEST_ARTIST_ERROR,\n        });\n        break;\n\n      default:\n    }\n  };\n}\n","import { getArtist } from '../../api/getArtist';\nimport { getImage } from '../../helpers/functions';\nimport {\n  SET_ARTIST_IMAGE,\n  FETCH_ARTIST,\n  PAGE_NAMES,\n} from '../constants/constants';\nimport { setRequestError } from './app';\n\nexport function fetchArtist({ artistName }) {\n  return async(dispatch) => {\n    try {\n      const response = await getArtist(artistName);\n      const { artist } = response;\n\n      dispatch({\n        type: FETCH_ARTIST,\n        payload: artist,\n      });\n      dispatch(setArtistImage(artist.image));\n    } catch (error) {\n      dispatch(setRequestError(PAGE_NAMES.ARTIST));\n    }\n  };\n}\n\nexport function setArtistImage(image) {\n  return (dispatch) => {\n    const imageType = 'artist';\n    const imageForArtistPage = getImage(image, imageType);\n\n    dispatch({\n      type: SET_ARTIST_IMAGE,\n      payload: imageForArtistPage,\n    });\n  };\n}\n","import React from 'react';\n\nexport const RequestError = () => (\n  <div className=\"message is-danger\">\n    <div className=\"message-header\">\n      <p>Oops, something went wrong</p>\n    </div>\n    <div className=\"message-body\">\n      Sorry for the inconvenience.\n      Please try to reload the page or contact the support team.\n    </div>\n  </div>\n);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ArtistTag } from '../../components/ArtistTag';\nimport { fetchArtist } from '../../redux/actions/artist';\nimport { RequestError } from '../../components/RequestError/RequestError';\n\nexport function ArtistDetails({ match }) {\n  const dispatch = useDispatch();\n  const artist = useSelector(state => state.artist.artist);\n  const artistImage = useSelector(state => state.artist.artistImage);\n  const requestError = useSelector(state => (\n    state.requestErrors.requestErrors.artistError\n  ));\n\n  if (match !== undefined) {\n    useEffect(() => {\n      dispatch(fetchArtist(match.params));\n    }, [match.params.artistName]);\n  }\n\n  if (requestError) {\n    return (\n      <RequestError />\n    );\n  }\n\n  return (\n    <>\n      {artist\n        ? (\n          <div>\n            <img src={artistImage['#text']} alt=\"\" />\n            <h3>{artist.name}</h3>\n            <p>{artist.bio.content}</p>\n            <p>Tags</p>\n            {artist.tags.tag.map(tag => (\n              <ArtistTag key={tag.name} tag={tag} />\n            ))}\n          </div>\n        )\n        : (\n          <div className=\"notification is-info\">\n            Hey, wanna see some? Just click on the artist`s\n            name on the Top Tracks Page!\n          </div>\n        )}\n    </>\n  );\n}\n\nArtistDetails.propTypes = PropTypes.shape({\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n}).isRequired;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport function Navigation() {\n  return (\n    <nav className=\"navbar\">\n      <div className=\"navbar-brand container\">\n        <Link className=\"navbar-item\" to=\"/\">\n          Top Tracks\n        </Link>\n        <Link className=\"navbar-item\" to=\"/track-search\">\n          Track Search\n        </Link>\n        <Link className=\"navbar-item\" to=\"/artist-details\">\n          Artist Details\n        </Link>\n      </div>\n    </nav>\n  );\n}\n","import React from 'react';\n\nexport function NotFoundPage() {\n  return (\n    <>\n      <h1 className=\"title\">404 Page Not Found</h1>\n      <p className=\"subtitle\">\n        An unexpected error has occurred. Please contact the site owner.\n      </p>\n    </>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './TrackCard.scss';\nimport { getImage } from '../../helpers/functions';\n\nexport function TrackCard({ track }) {\n  const trackImage = getImage(track.image);\n\n  return (\n    <div className=\"track-card card\">\n      <li>\n        <div className=\"card-content\">\n          <img\n            className=\"image is-64x64\"\n            src={trackImage['#text']}\n            alt={`${track.artist.name} Album Cover`}\n          />\n\n          <div>\n            <h3>{track.name}</h3>\n            <div>\n              <Link to={`/artist-details/${track.artist.name}`}>\n                {track.artist.name}\n              </Link>\n            </div>\n            <a href={track.artist.url}>Artist on Last.fm</a>\n          </div>\n        </div>\n      </li>\n    </div>\n  );\n}\n\nTrackCard.propTypes = {\n  track: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    image: PropTypes.arrayOf(PropTypes.shape({\n      '#text': PropTypes.string.isRequired,\n      size: PropTypes.string.isRequired,\n    }).isRequired).isRequired,\n    artist: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      url: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n","import { BASE_URL, API_KEY } from './api';\n\nconst getTopTracksURL\n  = `/?method=chart.gettoptracks&api_key=${API_KEY}&format=json`;\n\nexport async function getTopTracks() {\n  const response = await fetch(`${BASE_URL}${getTopTracksURL}`);\n  const result = await response.json();\n\n  return result;\n}\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { TrackCard } from '../../components/TrackCard/TrackCard';\nimport { fetchTopTracks } from '../../redux/actions/topTracks';\nimport { RequestError } from '../../components/RequestError/RequestError';\n\nexport function TopTracks() {\n  const dispatch = useDispatch();\n  const topTracks = useSelector(state => state.topTracks.tracks);\n  const requestError = useSelector(state => (\n    state.requestErrors.requestErrors.topTracksError\n  ));\n\n  useEffect(() => {\n    dispatch(fetchTopTracks());\n  }, []);\n\n  if (requestError) {\n    return (\n      <RequestError />\n    );\n  }\n\n  return (\n    <div>\n      <h2>TOP TRACKS:</h2>\n      <ul className=\"is-flex is-flex-wrap-wrap\">\n        {topTracks.map(track => (\n          <TrackCard track={track} key={track.id} />\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import { getTopTracks } from '../../api/getTopTracks';\nimport { FETCH_TOP_TRACKS, PAGE_NAMES } from '../constants/constants';\nimport { setRequestError } from './app';\n\nexport function fetchTopTracks() {\n  return async(dispatch) => {\n    try {\n      const response = await getTopTracks();\n      const tracks = response.tracks.track;\n      const tracksWithIds = tracks.map((track, i) => (\n        {\n          ...track,\n          id: i,\n        }\n      ));\n\n      dispatch({\n        type: FETCH_TOP_TRACKS,\n        payload: tracksWithIds,\n      });\n    } catch (error) {\n      dispatch(setRequestError(PAGE_NAMES.TOP_TRACKS));\n    }\n  };\n}\n","import { BASE_URL, API_KEY } from './api';\n\nexport async function getTrack(title) {\n  const getTrackURL\n    = `?method=track.search&track=${title}&api_key=${API_KEY}&format=json`;\n\n  const response = await fetch(`${BASE_URL}${getTrackURL}`);\n  const result = await response.json();\n\n  return result;\n}\n","import { getTrack } from '../../api/getTrack';\nimport {\n  FETCH_SEARCHED_TRACK,\n  CLEAR_TRACK_PREVIEW,\n  SET_SEARCH_ERROR,\n  CLEAR_SEARCH_ERROR,\n  SET_INPUT_ERROR,\n  CLEAR_INPUT_ERROR,\n  PAGE_NAMES,\n} from '../constants/constants';\nimport { setRequestError } from './app';\n\nexport function fetchSearchedTrack(trackName) {\n  return async(dispatch) => {\n    try {\n      const response = await getTrack(trackName);\n      const tracks = response.results.trackmatches.track;\n\n      if (tracks.length === 0) {\n        dispatch(setSearchError());\n\n        return;\n      }\n\n      dispatch({\n        type: FETCH_SEARCHED_TRACK,\n        payload: tracks,\n      });\n    } catch (error) {\n      dispatch(setRequestError(PAGE_NAMES.SEARCH_TRACK));\n    }\n  };\n}\n\nexport function clearSearchedTrack() {\n  return (dispatch) => {\n    dispatch({\n      type: CLEAR_TRACK_PREVIEW,\n    });\n  };\n}\n\nexport function setSearchError() {\n  return (dispatch) => {\n    dispatch({\n      type: SET_SEARCH_ERROR,\n    });\n  };\n}\n\nexport function clearSearchError() {\n  return (dispatch) => {\n    dispatch({\n      type: CLEAR_SEARCH_ERROR,\n    });\n  };\n}\n\nexport function setInputError() {\n  return (dispatch) => {\n    dispatch({\n      type: SET_INPUT_ERROR,\n    });\n\n    setTimeout(() => {\n      dispatch(clearInputError());\n    }, 3000);\n  };\n}\n\nexport function clearInputError() {\n  return (dispatch) => {\n    dispatch({\n      type: CLEAR_INPUT_ERROR,\n    });\n  };\n}\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  clearSearchError,\n  clearInputError,\n  clearSearchedTrack,\n  setInputError,\n  fetchSearchedTrack,\n} from '../../redux/actions/trackSearch';\n\nexport function SearchForm() {\n  const dispatch = useDispatch();\n  const searchError = useSelector(state => state.tracksForPreview.searchError);\n  const showInputError = useSelector(state => (\n    state.tracksForPreview.showInputError\n  ));\n  const [query, setQuery] = useState('');\n\n  const changeQuery = (event) => {\n    dispatch(clearSearchError());\n    dispatch(clearInputError());\n    setQuery(event.target.value);\n    dispatch(clearSearchedTrack());\n  };\n\n  const trackSearch = (event) => {\n    event.preventDefault();\n    if (query.trim().length === 0) {\n      dispatch(setInputError());\n\n      return;\n    }\n\n    dispatch(fetchSearchedTrack(query));\n  };\n\n  return (\n    <form className=\"find-track\">\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"track-title\">\n          Track title\n        </label>\n\n        <div className=\"control\">\n          <input\n            className={classNames('input', {\n              'is-danger': searchError,\n            })}\n            type=\"text\"\n            id=\"track-title\"\n            placeholder=\"Enter a track title to search\"\n            value={query}\n            onChange={changeQuery}\n            autoComplete=\"off\"\n          />\n        </div>\n\n        {showInputError && (\n          <p className=\"help is-danger\">\n            Search field cannot be empty\n          </p>\n        )}\n\n        {searchError && (\n          <p className=\"help is-danger\">\n            Can&apos;t find a track with such a title\n          </p>\n        )}\n      </div>\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            className=\"button is-light\"\n            onClick={trackSearch}\n          >\n            Find a track\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { RequestError } from '../../components/RequestError';\nimport { SearchForm } from '../../components/SearchForm';\n\nexport function TrackSearch() {\n  const tracksForPreview = useSelector(state => state.tracksForPreview.tracks);\n  const requestError = useSelector(state => (\n    state.requestErrors.requestErrors.searchTrackError\n  ));\n\n  return (\n    <>\n      <SearchForm />\n\n      {requestError && <RequestError />}\n\n      {!!tracksForPreview.length && (\n        <div className=\"container\">\n          <h3 className=\"title\">Tracks Matches:</h3>\n          <table className=\"table\">\n            <thead className=\"thead\">\n              <tr>\n                <th>Track Title</th>\n                <th>Artist</th>\n                <th>Link to Last.fm</th>\n              </tr>\n            </thead>\n            <tbody>\n              {tracksForPreview.map(track => (\n                <tr key={track.url}>\n                  <td>{track.name}</td>\n                  <td>{track.artist}</td>\n                  <td>\n                    <a\n                      href={track.url}\n                      rel=\"noreferrer\"\n                      target=\"_blank\"\n                    >\n                      Listen\n                    </a>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </>\n  );\n}\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport './App.scss';\nimport { ArtistDetails } from './pages/ArtistDetails';\nimport { Navigation } from './components/Navigation';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { TopTracks } from './pages/TopTracks';\nimport { TrackSearch } from './pages/TrackSearch';\n\nexport function App() {\n  return (\n    <>\n      <Navigation />\n      <div className=\"container\">\n        <Switch>\n          <Route\n            path=\"/artist-details/:artistName\"\n            component={ArtistDetails}\n          />\n          <Route path=\"/artist-details\">\n            <ArtistDetails />\n          </Route>\n\n          <Route path=\"/track-search\">\n            <TrackSearch />\n          </Route>\n\n          <Route path=\"/\" exact>\n            <TopTracks />\n          </Route>\n\n          <Redirect path=\"/home\" to=\"/\" />\n\n          <NotFoundPage />\n        </Switch>\n      </div>\n    </>\n  );\n}\n","import {\n  SET_REQUEST_TOP_TRACKS_ERROR,\n  SET_REQUEST_SEARCH_TRACK_ERROR,\n  SET_REQUEST_ARTIST_ERROR,\n} from '../constants/constants';\n\nconst initialState = {\n  requestErrors: {\n    topTracksError: false,\n    searchTrackError: false,\n    artistError: false,\n  },\n};\n\nexport const appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_REQUEST_TOP_TRACKS_ERROR:\n      return {\n        ...state,\n        requestErrors: {\n          ...state.requestErrors,\n          topTracksError: true,\n        },\n      };\n    case SET_REQUEST_SEARCH_TRACK_ERROR:\n      return {\n        ...state,\n        requestErrors: {\n          ...state.requestErrors,\n          searchTrackError: true,\n        },\n      };\n    case SET_REQUEST_ARTIST_ERROR:\n      return {\n        ...state,\n        requestErrors: {\n          ...state.requestErrors,\n          artistError: true,\n        },\n      };\n    default:\n      return state;\n  }\n};\n","import { FETCH_ARTIST, SET_ARTIST_IMAGE } from '../constants/constants';\n\nconst initialState = {\n  artist: null,\n  artistImage: {},\n};\n\nexport const artistReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_ARTIST:\n      return {\n        ...state,\n        artist: action.payload,\n      };\n    case SET_ARTIST_IMAGE:\n      return {\n        ...state,\n        artistImage: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import { FETCH_TOP_TRACKS } from '../constants/constants';\n\nconst initialState = {\n  tracks: [],\n};\n\nexport const topTracksReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_TOP_TRACKS:\n      return {\n        ...state,\n        tracks: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  FETCH_SEARCHED_TRACK,\n  CLEAR_TRACK_PREVIEW,\n  SET_SEARCH_ERROR,\n  CLEAR_SEARCH_ERROR,\n  SET_INPUT_ERROR,\n  CLEAR_INPUT_ERROR,\n} from '../constants/constants';\n\nconst initialState = {\n  tracks: [],\n  searchError: false,\n  showInputError: false,\n  requestError: false,\n};\n\nexport const trackSearchReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_SEARCHED_TRACK:\n      return {\n        ...state,\n        tracks: action.payload,\n      };\n    case CLEAR_TRACK_PREVIEW:\n      return {\n        ...state,\n        tracks: [],\n      };\n    case SET_SEARCH_ERROR:\n      return {\n        ...state,\n        searchError: true,\n      };\n    case CLEAR_SEARCH_ERROR:\n      return {\n        ...state,\n        searchError: false,\n      };\n    case SET_INPUT_ERROR:\n      return {\n        ...state,\n        showInputError: true,\n      };\n    case CLEAR_INPUT_ERROR:\n      return {\n        ...state,\n        showInputError: false,\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { appReducer } from './appReducer';\nimport { artistReducer } from './artistReducer';\nimport { topTracksReducer } from './topTracksReducer';\nimport { trackSearchReducer } from './trackSearchReducer';\n\nexport const rootReducer = combineReducers({\n  topTracks: topTracksReducer,\n  artist: artistReducer,\n  tracksForPreview: trackSearchReducer,\n  requestErrors: appReducer,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport { App } from './App';\nimport { rootReducer } from './redux/reducers/rootReducer';\n\n/* eslint-disable no-underscore-dangle */\nconst store = createStore(rootReducer, compose(\n  applyMiddleware(thunk),\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n));\n/* eslint-enable */\n\nconst app = (\n  <Provider store={store}>\n    <HashRouter>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </HashRouter>\n  </Provider>\n);\n\nReactDOM.render(\n  app,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}