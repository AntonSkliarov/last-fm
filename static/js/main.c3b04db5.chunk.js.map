{"version":3,"sources":["api/api.js","api/getArtist.js","helpers/functions.js","redux/constants/constants.js","redux/actions/app.js","redux/actions/artist.js","components/RequestError/RequestError.jsx","components/ArtistTag/ArtistTag.jsx","components/ArtistInfo/ArtistInfo.jsx","pages/ArtistDetails/ArtistDetails.jsx","components/Navigation/Navigation.jsx","pages/NotFoundPage/NotFoundPage.jsx","components/TrackCard/TrackCard.jsx","api/getTopTracks.js","pages/TopTracks/TopTracks.jsx","redux/actions/topTracks.js","api/getTrack.js","redux/actions/trackSearch.js","components/SearchForm/SearchForm.jsx","components/TracksPreview/TracksPreview.jsx","pages/TrackSearch/TrackSearch.jsx","App.jsx","redux/reducers/appReducer.js","redux/reducers/artistReducer.js","redux/reducers/topTracksReducer.js","redux/reducers/trackSearchReducer.js","redux/reducers/rootReducer.js","index.jsx"],"names":["BASE_URL","API_KEY","getArtist","name","a","getArtistURL","fetch","response","json","result","getImage","images","imageType","trackImage","forEach","picture","size","artistImage","FETCH_TOP_TRACKS","FETCH_ARTIST","SET_ARTIST_IMAGE","FETCH_SEARCHED_TRACK","CLEAR_TRACK_PREVIEW","SET_SEARCH_ERROR","CLEAR_SEARCH_ERROR","SET_INPUT_ERROR","CLEAR_INPUT_ERROR","SET_REQUEST_TOP_TRACKS_ERROR","SET_REQUEST_SEARCH_TRACK_ERROR","SET_REQUEST_ARTIST_ERROR","PAGE_NAMES","setRequestError","pageName","dispatch","type","setArtistImage","image","imageForArtistPage","payload","RequestError","className","ArtistTag","tag","href","url","target","rel","ArtistInfo","artist","useSelector","state","src","alt","bio","content","tags","map","ArtistDetails","match","useDispatch","requestError","requestErrors","artistError","undefined","useEffect","artistName","fetchArtist","params","Navigation","to","activeClassName","exact","NotFoundPage","TrackCard","track","getTopTracksURL","getTopTracks","TopTracks","topTracks","tracks","topTracksError","tracksWithIds","i","id","getTrack","title","getTrackURL","clearInputError","SearchForm","searchError","tracksForPreview","showInputError","useState","query","setQuery","htmlFor","classNames","placeholder","value","onChange","event","autoComplete","onClick","trackName","preventDefault","trim","length","results","trackmatches","setTimeout","TracksPreview","TrackSearch","searchTrackError","App","path","component","initialState","rootReducer","combineReducers","action","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","app","StrictMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c3b04db5.chunk.js","sourcesContent":["export const BASE_URL = 'https://ws.audioscrobbler.com/2.0/';\n\nexport const API_KEY = '5190711e40adb8688facb8a58d660e2d';\n","import { BASE_URL, API_KEY } from './api';\n\nexport async function getArtist(name) {\n  const getArtistURL\n    = `?method=artist.getinfo&artist=${name}&api_key=${API_KEY}&format=json`;\n\n  const response = await fetch(`${BASE_URL}${getArtistURL}`);\n  const result = await response.json();\n\n  return result;\n}\n","export function getImage(images, imageType = 'track') {\n  if (imageType === 'track') {\n    let trackImage = {};\n\n    images.forEach((picture) => {\n      if (picture.size === 'medium') {\n        trackImage = picture;\n      }\n    });\n\n    return trackImage;\n  }\n\n  let artistImage = {};\n\n  images.forEach((picture) => {\n    if (picture.size === 'extralarge') {\n      artistImage = picture;\n    }\n  });\n\n  return artistImage;\n}\n","export const FETCH_TOP_TRACKS = 'topTracks/FETCH_TOP_TRACKS';\n\nexport const FETCH_ARTIST = 'artist/FETCH_ARTIST';\nexport const SET_ARTIST_IMAGE = 'artist/SET_ARTIST_IMAGE';\n\nexport const FETCH_SEARCHED_TRACK = 'trackSearch/FETCH_SEARCHED_TRACK';\nexport const CLEAR_TRACK_PREVIEW = 'trackSearch/CLEAR_TRACK_PREVIEW';\nexport const SET_SEARCH_ERROR = 'trackSearch/SET_SEARCH_ERROR';\nexport const CLEAR_SEARCH_ERROR = 'trackSearch/CLEAR_SEARCH_ERROR';\nexport const SET_INPUT_ERROR = 'trackSearch/SET_INPUT_ERROR';\nexport const CLEAR_INPUT_ERROR = 'trackSearch/CLEAR_INPUT_ERROR';\n\nexport const SET_REQUEST_TOP_TRACKS_ERROR = 'app/SET_REQUEST_TOP_TRACKS_ERROR';\nexport const SET_REQUEST_SEARCH_TRACK_ERROR\n  = 'app/SET_REQUEST_SEARCH_TRACK_ERROR';\nexport const SET_REQUEST_ARTIST_ERROR = 'app/SET_REQUEST_ARTIST_ERROR';\n\nexport const PAGE_NAMES = {\n  TOP_TRACKS: 'TOP_TRACK_PAGE',\n  SEARCH_TRACK: 'SEARCH_TRACK_PAGE',\n  ARTIST: 'ARTIST_PAGE',\n};\n","import {\n  SET_REQUEST_TOP_TRACKS_ERROR,\n  SET_REQUEST_SEARCH_TRACK_ERROR,\n  SET_REQUEST_ARTIST_ERROR,\n  PAGE_NAMES,\n} from '../constants/constants';\n\nexport function setRequestError(pageName) {\n  return (dispatch) => {\n    switch (pageName) {\n      case PAGE_NAMES.TOP_TRACKS:\n        dispatch({\n          type: SET_REQUEST_TOP_TRACKS_ERROR,\n        });\n        break;\n\n      case PAGE_NAMES.SEARCH_TRACK:\n        dispatch({\n          type: SET_REQUEST_SEARCH_TRACK_ERROR,\n        });\n        break;\n\n      case PAGE_NAMES.ARTIST:\n        dispatch({\n          type: SET_REQUEST_ARTIST_ERROR,\n        });\n        break;\n\n      default:\n    }\n  };\n}\n","import { getArtist } from '../../api/getArtist';\nimport { getImage } from '../../helpers/functions';\nimport {\n  SET_ARTIST_IMAGE,\n  FETCH_ARTIST,\n  PAGE_NAMES,\n} from '../constants/constants';\nimport { setRequestError } from './app';\n\nexport function fetchArtist({ artistName }) {\n  return async(dispatch) => {\n    try {\n      const response = await getArtist(artistName);\n      const { artist } = response;\n\n      dispatch({\n        type: FETCH_ARTIST,\n        payload: artist,\n      });\n      dispatch(setArtistImage(artist.image));\n    } catch (error) {\n      dispatch(setRequestError(PAGE_NAMES.ARTIST));\n    }\n  };\n}\n\nexport function setArtistImage(image) {\n  return (dispatch) => {\n    const imageType = 'artist';\n    const imageForArtistPage = getImage(image, imageType);\n\n    dispatch({\n      type: SET_ARTIST_IMAGE,\n      payload: imageForArtistPage,\n    });\n  };\n}\n","import React from 'react';\n\nexport const RequestError = () => (\n  <div className=\"message is-danger\">\n    <div className=\"message-header\">\n      <p>Oops, something went wrong</p>\n    </div>\n    <div className=\"message-body\">\n      Sorry for the inconvenience.\n      Please try to reload the page or contact the support team.\n    </div>\n  </div>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const ArtistTag = ({ tag }) => (\n  <a\n    href={tag.url}\n    target=\"_blank\"\n    rel=\"noreferrer\"\n  >\n    {tag.name}\n  </a>\n);\n\nArtistTag.propTypes = {\n  tag: PropTypes.shape({\n    url: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { ArtistTag } from '../ArtistTag';\n\nexport function ArtistInfo() {\n  const artist = useSelector(state => state.artist.artist);\n  const artistImage = useSelector(state => state.artist.artistImage);\n\n  return (\n    <div>\n      <img src={artistImage['#text']} alt=\"\" />\n      <h3>{artist.name}</h3>\n      <p>{artist.bio.content}</p>\n      <p>Tags</p>\n      {artist.tags.tag.map(tag => (\n        <ArtistTag key={tag.name} tag={tag} />\n      ))}\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchArtist } from '../../redux/actions/artist';\nimport { RequestError } from '../../components/RequestError/RequestError';\nimport { ArtistInfo } from '../../components/ArtistInfo/ArtistInfo';\n\nexport function ArtistDetails({ match }) {\n  const dispatch = useDispatch();\n  const artist = useSelector(state => state.artist.artist);\n  const requestError = useSelector(state => (\n    state.requestErrors.requestErrors.artistError\n  ));\n\n  if (match !== undefined) {\n    useEffect(() => {\n      dispatch(fetchArtist(match.params));\n    }, [match.params.artistName]);\n  }\n\n  if (requestError) {\n    return (\n      <RequestError />\n    );\n  }\n\n  return (\n    <>\n      {artist\n        ? <ArtistInfo />\n        : (\n          <div className=\"notification is-info\">\n            Hey, wanna see some? Just click on the artist&apos;s\n            name on the Top Tracks Page!\n          </div>\n        )}\n    </>\n  );\n}\n\nArtistDetails.propTypes = PropTypes.shape({\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      artistName: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n}).isRequired;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport function Navigation() {\n  return (\n    <nav className=\" mb-4\">\n      <div className=\"navbar-brand container\">\n        <NavLink\n          className=\"navbar-item is-tab\"\n          to=\"/\"\n          activeClassName=\"is-active\"\n          exact\n        >\n          Top Tracks\n        </NavLink>\n\n        <NavLink\n          className=\"navbar-item is-tab\"\n          to=\"/track-search\"\n          activeClassName=\"is-active\"\n        >\n          Track Search\n        </NavLink>\n\n        <NavLink\n          className=\"navbar-item is-tab\"\n          to=\"/artist-details\"\n          activeClassName=\"is-active\"\n        >\n          Artist Details\n        </NavLink>\n      </div>\n    </nav>\n  );\n}\n","import React from 'react';\n\nexport function NotFoundPage() {\n  return (\n    <>\n      <h1 className=\"title\">404 Page Not Found</h1>\n      <p className=\"subtitle\">\n        An unexpected error has occurred. Please contact the site owner.\n      </p>\n    </>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './TrackCard.scss';\nimport { getImage } from '../../helpers/functions';\n\nexport function TrackCard({ track }) {\n  const trackImage = getImage(track.image);\n\n  return (\n    <div className=\"track-card card\">\n      <li>\n        <div className=\"card-content\">\n          <img\n            className=\"image is-64x64\"\n            src={trackImage['#text']}\n            alt={`${track.artist.name} Album Cover`}\n          />\n\n          <div>\n            <h3>{track.name}</h3>\n            <div>\n              <Link to={`/artist-details/${track.artist.name}`}>\n                {track.artist.name}\n              </Link>\n            </div>\n            <a\n              href={track.artist.url}\n              rel=\"noreferrer\"\n              target=\"_blank\"\n            >\n              Artist on Last.fm\n            </a>\n          </div>\n        </div>\n      </li>\n    </div>\n  );\n}\n\nTrackCard.propTypes = {\n  track: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    image: PropTypes.arrayOf(PropTypes.shape({\n      '#text': PropTypes.string.isRequired,\n      size: PropTypes.string.isRequired,\n    }).isRequired).isRequired,\n    artist: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      url: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n","import { BASE_URL, API_KEY } from './api';\n\nconst getTopTracksURL\n  = `/?method=chart.gettoptracks&api_key=${API_KEY}&format=json`;\n\nexport async function getTopTracks() {\n  const response = await fetch(`${BASE_URL}${getTopTracksURL}`);\n  const result = await response.json();\n\n  return result;\n}\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { TrackCard } from '../../components/TrackCard/TrackCard';\nimport { fetchTopTracks } from '../../redux/actions/topTracks';\nimport { RequestError } from '../../components/RequestError/RequestError';\n\nexport function TopTracks() {\n  const dispatch = useDispatch();\n  const topTracks = useSelector(state => state.topTracks.tracks);\n  const requestError = useSelector(state => (\n    state.requestErrors.requestErrors.topTracksError\n  ));\n\n  useEffect(() => {\n    dispatch(fetchTopTracks());\n  }, []);\n\n  if (requestError) {\n    return (\n      <RequestError />\n    );\n  }\n\n  return (\n    <div>\n      <h2>TOP TRACKS:</h2>\n      <ul className=\"is-flex is-flex-wrap-wrap\">\n        {topTracks.map(track => (\n          <TrackCard track={track} key={track.id} />\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import { getTopTracks } from '../../api/getTopTracks';\nimport { FETCH_TOP_TRACKS, PAGE_NAMES } from '../constants/constants';\nimport { setRequestError } from './app';\n\nexport function fetchTopTracks() {\n  return async(dispatch) => {\n    try {\n      const response = await getTopTracks();\n      const tracks = response.tracks.track;\n      const tracksWithIds = tracks.map((track, i) => (\n        {\n          ...track,\n          id: i,\n        }\n      ));\n\n      dispatch({\n        type: FETCH_TOP_TRACKS,\n        payload: tracksWithIds,\n      });\n    } catch (error) {\n      dispatch(setRequestError(PAGE_NAMES.TOP_TRACKS));\n    }\n  };\n}\n","import { BASE_URL, API_KEY } from './api';\n\nexport async function getTrack(title) {\n  const getTrackURL\n    = `?method=track.search&track=${title}&api_key=${API_KEY}&format=json`;\n\n  const response = await fetch(`${BASE_URL}${getTrackURL}`);\n  const result = await response.json();\n\n  return result;\n}\n","import { getTrack } from '../../api/getTrack';\nimport {\n  FETCH_SEARCHED_TRACK,\n  CLEAR_TRACK_PREVIEW,\n  SET_SEARCH_ERROR,\n  CLEAR_SEARCH_ERROR,\n  SET_INPUT_ERROR,\n  CLEAR_INPUT_ERROR,\n  PAGE_NAMES,\n} from '../constants/constants';\nimport { setRequestError } from './app';\n\nexport function fetchSearchedTrack(trackName) {\n  return async(dispatch) => {\n    try {\n      const response = await getTrack(trackName);\n      const tracks = response.results.trackmatches.track;\n\n      if (tracks.length === 0) {\n        dispatch(setSearchError());\n\n        return;\n      }\n\n      dispatch({\n        type: FETCH_SEARCHED_TRACK,\n        payload: tracks,\n      });\n    } catch (error) {\n      dispatch(setRequestError(PAGE_NAMES.SEARCH_TRACK));\n    }\n  };\n}\n\nexport function clearSearchedTrack() {\n  return (dispatch) => {\n    dispatch({\n      type: CLEAR_TRACK_PREVIEW,\n    });\n  };\n}\n\nexport function setSearchError() {\n  return (dispatch) => {\n    dispatch({\n      type: SET_SEARCH_ERROR,\n    });\n  };\n}\n\nexport function clearSearchError() {\n  return (dispatch) => {\n    dispatch({\n      type: CLEAR_SEARCH_ERROR,\n    });\n  };\n}\n\nexport function setInputError() {\n  return (dispatch) => {\n    dispatch({\n      type: SET_INPUT_ERROR,\n    });\n\n    setTimeout(() => {\n      dispatch(clearInputError());\n    }, 3000);\n  };\n}\n\nexport function clearInputError() {\n  return (dispatch) => {\n    dispatch({\n      type: CLEAR_INPUT_ERROR,\n    });\n  };\n}\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  clearSearchError,\n  clearInputError,\n  clearSearchedTrack,\n  setInputError,\n  fetchSearchedTrack,\n} from '../../redux/actions/trackSearch';\n\nexport function SearchForm() {\n  const dispatch = useDispatch();\n  const searchError = useSelector(state => state.tracksForPreview.searchError);\n  const showInputError = useSelector(state => (\n    state.tracksForPreview.showInputError\n  ));\n  const [query, setQuery] = useState('');\n\n  const changeQuery = (event) => {\n    dispatch(clearSearchError());\n    dispatch(clearInputError());\n    setQuery(event.target.value);\n    dispatch(clearSearchedTrack());\n  };\n\n  const trackSearch = (event) => {\n    event.preventDefault();\n    if (query.trim().length === 0) {\n      dispatch(setInputError());\n\n      return;\n    }\n\n    dispatch(fetchSearchedTrack(query));\n  };\n\n  return (\n    <form className=\"find-track mb-4\">\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"track-title\">\n          Track title\n        </label>\n\n        <div className=\"control\">\n          <input\n            className={classNames('input ', {\n              'is-danger': searchError,\n            })}\n            type=\"text\"\n            id=\"track-title\"\n            placeholder=\"Enter a track title to search\"\n            value={query}\n            onChange={changeQuery}\n            autoComplete=\"off\"\n          />\n        </div>\n\n        {showInputError && (\n          <p className=\"help is-danger\">\n            Search field cannot be empty\n          </p>\n        )}\n\n        {searchError && (\n          <p className=\"help is-danger\">\n            Can&apos;t find a track with such a title\n          </p>\n        )}\n      </div>\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            className=\"button is-light\"\n            onClick={trackSearch}\n          >\n            Find a track\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nexport function TracksPreview() {\n  const tracksForPreview = useSelector(state => state.tracksForPreview.tracks);\n\n  return (\n    <div className=\"container\">\n      <h3 className=\"title\">\n        {`Tracks found: ${tracksForPreview.length}`}\n      </h3>\n      <table className=\"table\">\n        <thead className=\"thead\">\n          <tr>\n            <th>Track Title</th>\n            <th>Artist</th>\n            <th>Link to Last.fm</th>\n          </tr>\n        </thead>\n        <tbody>\n          {tracksForPreview.map(track => (\n            <tr key={track.url}>\n              <td>{track.name}</td>\n              <td>{track.artist}</td>\n              <td>\n                <a\n                  href={track.url}\n                  rel=\"noreferrer\"\n                  target=\"_blank\"\n                >\n                  Listen\n                </a>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { RequestError } from '../../components/RequestError';\nimport { SearchForm } from '../../components/SearchForm';\nimport { TracksPreview } from '../../components/TracksPreview/TracksPreview';\n\nexport function TrackSearch() {\n  const tracksForPreview = useSelector(state => state.tracksForPreview.tracks);\n  const requestError = useSelector(state => (\n    state.requestErrors.requestErrors.searchTrackError\n  ));\n\n  return (\n    <>\n      <SearchForm />\n\n      {requestError && <RequestError />}\n\n      {!!tracksForPreview.length && <TracksPreview />}\n    </>\n  );\n}\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport './App.scss';\nimport { ArtistDetails } from './pages/ArtistDetails';\nimport { Navigation } from './components/Navigation';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { TopTracks } from './pages/TopTracks';\nimport { TrackSearch } from './pages/TrackSearch';\n\nexport function App() {\n  return (\n    <>\n      <Navigation />\n      <div className=\"container\">\n        <Switch>\n          <Route\n            path=\"/artist-details/:artistName\"\n            component={ArtistDetails}\n          />\n          <Route path=\"/artist-details\">\n            <ArtistDetails />\n          </Route>\n\n          <Route path=\"/track-search\">\n            <TrackSearch />\n          </Route>\n\n          <Route path=\"/\" exact>\n            <TopTracks />\n          </Route>\n\n          <Redirect path=\"/home\" to=\"/\" />\n\n          <NotFoundPage />\n        </Switch>\n      </div>\n    </>\n  );\n}\n","import {\n  SET_REQUEST_TOP_TRACKS_ERROR,\n  SET_REQUEST_SEARCH_TRACK_ERROR,\n  SET_REQUEST_ARTIST_ERROR,\n} from '../constants/constants';\n\nconst initialState = {\n  requestErrors: {\n    topTracksError: false,\n    searchTrackError: false,\n    artistError: false,\n  },\n};\n\nexport const appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_REQUEST_TOP_TRACKS_ERROR:\n      return {\n        ...state,\n        requestErrors: {\n          ...state.requestErrors,\n          topTracksError: true,\n        },\n      };\n    case SET_REQUEST_SEARCH_TRACK_ERROR:\n      return {\n        ...state,\n        requestErrors: {\n          ...state.requestErrors,\n          searchTrackError: true,\n        },\n      };\n    case SET_REQUEST_ARTIST_ERROR:\n      return {\n        ...state,\n        requestErrors: {\n          ...state.requestErrors,\n          artistError: true,\n        },\n      };\n    default:\n      return state;\n  }\n};\n","import { FETCH_ARTIST, SET_ARTIST_IMAGE } from '../constants/constants';\n\nconst initialState = {\n  artist: null,\n  artistImage: {},\n};\n\nexport const artistReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_ARTIST:\n      return {\n        ...state,\n        artist: action.payload,\n      };\n    case SET_ARTIST_IMAGE:\n      return {\n        ...state,\n        artistImage: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import { FETCH_TOP_TRACKS } from '../constants/constants';\n\nconst initialState = {\n  tracks: [],\n};\n\nexport const topTracksReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_TOP_TRACKS:\n      return {\n        ...state,\n        tracks: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  FETCH_SEARCHED_TRACK,\n  CLEAR_TRACK_PREVIEW,\n  SET_SEARCH_ERROR,\n  CLEAR_SEARCH_ERROR,\n  SET_INPUT_ERROR,\n  CLEAR_INPUT_ERROR,\n} from '../constants/constants';\n\nconst initialState = {\n  tracks: [],\n  searchError: false,\n  showInputError: false,\n  requestError: false,\n};\n\nexport const trackSearchReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_SEARCHED_TRACK:\n      return {\n        ...state,\n        tracks: action.payload,\n      };\n    case CLEAR_TRACK_PREVIEW:\n      return {\n        ...state,\n        tracks: [],\n      };\n    case SET_SEARCH_ERROR:\n      return {\n        ...state,\n        searchError: true,\n      };\n    case CLEAR_SEARCH_ERROR:\n      return {\n        ...state,\n        searchError: false,\n      };\n    case SET_INPUT_ERROR:\n      return {\n        ...state,\n        showInputError: true,\n      };\n    case CLEAR_INPUT_ERROR:\n      return {\n        ...state,\n        showInputError: false,\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { appReducer } from './appReducer';\nimport { artistReducer } from './artistReducer';\nimport { topTracksReducer } from './topTracksReducer';\nimport { trackSearchReducer } from './trackSearchReducer';\n\nexport const rootReducer = combineReducers({\n  topTracks: topTracksReducer,\n  artist: artistReducer,\n  tracksForPreview: trackSearchReducer,\n  requestErrors: appReducer,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport { App } from './App';\nimport { rootReducer } from './redux/reducers/rootReducer';\n\n/* eslint-disable no-underscore-dangle */\nconst store = createStore(rootReducer, compose(\n  applyMiddleware(thunk),\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n));\n/* eslint-enable */\n\nconst app = (\n  <Provider store={store}>\n    <HashRouter>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </HashRouter>\n  </Provider>\n);\n\nReactDOM.render(\n  app,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}